/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-06-26 13:01:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class adminRegisterAnnounce_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/WebDevelopment/git/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/CarCamping/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1655811683348L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>용품 등록</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div align=\"center\">\r\n");
      out.write("		<form name=\"registerAnnounce\" method=\"post\" action=\"adminRegisterAnnounce.admin\" enctype=\"multipart/form-data\"\r\n");
      out.write("		class=\"row g-3 needs-validation\" novalidate>\r\n");
      out.write("		<table class=\"table table-sm\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>\r\n");
      out.write("					<div class=\"form-floating mb-3\">\r\n");
      out.write("						<input type=\"text\" name=\"aa_title\" class=\"form-control\" id=\"validationCustom01\" maxlength=\"20\" placeholder=\"1\" required>\r\n");
      out.write("						<label for=\"validationCustom01\">제목</label>\r\n");
      out.write("					</div>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>\r\n");
      out.write("					<div class=\"form-floating mb-3\">\r\n");
      out.write("						<textarea name=\"aa_content\" style=\"resize: none;\" class=\"form-control\" id=\"validationCustom02\" maxlength=\"1000\" placeholder=\"1\" required></textarea>\r\n");
      out.write("						<label for=\"validationCustom02\">내용</label>\r\n");
      out.write("					</div>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\">\r\n");
      out.write("						<input class=\"form-control\" id=\"formFileMultiple\" type=\"file\"\r\n");
      out.write("							name=\"aa_image\" multiple accept=\"image/*\">\r\n");
      out.write("						<div id=\"passwordHelpBlock\" class=\"form-text\">\r\n");
      out.write("							최대 5개 이미지 업로드 가능합니다		\r\n");
      out.write("							</div>\r\n");
      out.write("						<ul id=\"file-list\">\r\n");
      out.write("							<li class=\"no-items\"></li>\r\n");
      out.write("						</ul>\r\n");
      out.write("\r\n");
      out.write("						<script>\r\n");
      out.write("							var filesUpload = document\r\n");
      out.write("									.getElementById(\"formFileMultiple\"), fileList = document\r\n");
      out.write("									.getElementById(\"file-list\");\r\n");
      out.write("\r\n");
      out.write("							function traverseFiles(files) {\r\n");
      out.write("								var li, file, fileInfo;\r\n");
      out.write("								fileList.innerHTML = \"\";\r\n");
      out.write("\r\n");
      out.write("								for (var i = 0, il = files.length; i < il; i++) {\r\n");
      out.write("									li = document.createElement(\"li\");\r\n");
      out.write("									file = files[i];\r\n");
      out.write("									fileInfo = \"<div><strong>파일명:</strong> \"\r\n");
      out.write("											+ file.name + \"</div>\";\r\n");
      out.write("\r\n");
      out.write("									li.innerHTML = fileInfo;\r\n");
      out.write("									fileList.appendChild(li);\r\n");
      out.write("								}\r\n");
      out.write("								;\r\n");
      out.write("							};\r\n");
      out.write("\r\n");
      out.write("							filesUpload.onchange = function() {\r\n");
      out.write("								traverseFiles(this.files);\r\n");
      out.write("							};\r\n");
      out.write("						</script>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td align=\"center\" colspan=\"2\">\r\n");
      out.write("					<button class=\"btn btn-primary\" type=\"reset\">취소</button>\r\n");
      out.write("					<button class=\"btn btn-primary\" type=\"submit\">등록</button>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("	// Example starter JavaScript for disabling form submissions if there are invalid fields\r\n");
      out.write("(function () {\r\n");
      out.write("  'use strict'\r\n");
      out.write("\r\n");
      out.write("  // Fetch all the forms we want to apply custom Bootstrap validation styles to\r\n");
      out.write("  var forms = document.querySelectorAll('.needs-validation')\r\n");
      out.write("\r\n");
      out.write("  // Loop over them and prevent submission\r\n");
      out.write("  Array.prototype.slice.call(forms)\r\n");
      out.write("    .forEach(function (form) {\r\n");
      out.write("      form.addEventListener('submit', function (event) {\r\n");
      out.write("        if (!form.checkValidity()) {\r\n");
      out.write("          event.preventDefault()\r\n");
      out.write("          event.stopPropagation()\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        form.classList.add('was-validated')\r\n");
      out.write("      }, false)\r\n");
      out.write("    })\r\n");
      out.write("})()\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
